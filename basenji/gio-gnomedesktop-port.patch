diff -Naur basenji-0.9.0.orig/Basenji/Makefile basenji-0.9.0/Basenji/Makefile
--- basenji-0.9.0.orig/Basenji/Makefile	2012-02-19 11:29:25.000000000 +0100
+++ basenji-0.9.0/Basenji/Makefile	2012-06-22 20:38:28.928581814 +0200
@@ -23,6 +23,7 @@
 BASENJI_EXE_MDB=$(BUILD_DIR)/Basenji.exe.mdb
 BASENJI_EXE_CONFIG_SOURCE=Basenji.exe.config
 PLATFORM_DLL_SOURCE=../Platform/bin/Debug/Platform.dll
+PLATFORM_DLL_CONFIG_SOURCE=../Platform/Platform.dll.config
 PLATFORM_DLL_MDB_SOURCE=../Platform/bin/Debug/Platform.dll.mdb
 PLATFORM_DLL_MDB=$(BUILD_DIR)/Platform.dll.mdb
 VOLUMEDB_DLL_SOURCE=../VolumeDB/bin/Debug/VolumeDB.dll
@@ -51,6 +52,7 @@
 BASENJI_EXE_MDB=
 BASENJI_EXE_CONFIG_SOURCE=Basenji.exe.config
 PLATFORM_DLL_SOURCE=../Platform/bin/Release/Platform.dll
+PLATFORM_DLL_CONFIG_SOURCE=../Platform/Platform.dll.config
 PLATFORM_DLL_MDB=
 VOLUMEDB_DLL_SOURCE=../VolumeDB/bin/Release/VolumeDB.dll
 PLATFORM_COMMON_DB_DLL_SOURCE=../Platform.Common.DB/bin/Release/Platform.Common.DB.dll
@@ -76,6 +78,7 @@
 BASENJI_EXE_MDB=$(BUILD_DIR)/Basenji.exe.mdb
 BASENJI_EXE_CONFIG_SOURCE=Basenji.exe.config
 PLATFORM_DLL_SOURCE=../Platform/bin/Debug/Platform.dll
+PLATFORM_DLL_CONFIG_SOURCE=../Platform/Platform.dll.config
 PLATFORM_DLL_MDB_SOURCE=../Platform/bin/Debug/Platform.dll.mdb
 PLATFORM_DLL_MDB=$(BUILD_DIR)/Platform.dll.mdb
 VOLUMEDB_DLL_SOURCE=../VolumeDB/bin/Debug/VolumeDB.dll
@@ -104,6 +107,7 @@
 BASENJI_EXE_MDB=
 BASENJI_EXE_CONFIG_SOURCE=Basenji.exe.config
 PLATFORM_DLL_SOURCE=../Platform/bin/Release/Platform.dll
+PLATFORM_DLL_CONFIG_SOURCE=../Platform/Platform.dll.config
 PLATFORM_DLL_MDB=
 VOLUMEDB_DLL_SOURCE=../VolumeDB/bin/Release/VolumeDB.dll
 PLATFORM_COMMON_DB_DLL_SOURCE=../Platform.Common.DB/bin/Release/Platform.Common.DB.dll
@@ -121,6 +125,7 @@
 	$(BASENJI_EXE_MDB) \
 	$(BASENJI_EXE_CONFIG) \
 	$(PLATFORM_DLL) \
+	$(PLATFORM_DLL_CONFIG) \
 	$(PLATFORM_DLL_MDB) \
 	$(VOLUMEDB_DLL) \
 	$(PLATFORM_COMMON_DB_DLL) \
@@ -142,6 +147,7 @@
 BASENJI = $(BUILD_DIR)/basenji
 BASENJI_EXE_CONFIG = $(BUILD_DIR)/Basenji.exe.config
 PLATFORM_DLL = $(BUILD_DIR)/Platform.dll
+PLATFORM_DLL_CONFIG = $(BUILD_DIR)/Platform.dll.config
 VOLUMEDB_DLL = $(BUILD_DIR)/VolumeDB.dll
 PLATFORM_COMMON_DB_DLL = $(BUILD_DIR)/Platform.Common.DB.dll
 MUSICBRAINZ_DLL = $(BUILD_DIR)/MusicBrainz.dll
@@ -266,6 +272,7 @@
 $(eval $(call emit-deploy-wrapper,BASENJI,basenji))
 $(eval $(call emit-deploy-target,BASENJI_EXE_CONFIG))
 $(eval $(call emit-deploy-target,PLATFORM_DLL))
+$(eval $(call emit-deploy-target,PLATFORM_DLL_CONFIG))
 $(eval $(call emit-deploy-target,PLATFORM_DLL_MDB))
 $(eval $(call emit-deploy-target,VOLUMEDB_DLL))
 $(eval $(call emit-deploy-target,PLATFORM_COMMON_DB_DLL))
@@ -327,6 +334,7 @@
 	$(call cp,$(BASENJI),$(DESTDIR)$(bindir))
 	$(call cp,$(BASENJI_EXE_CONFIG),$(DESTDIR)$(libdir)/$(PACKAGE))
 	$(call cp,$(PLATFORM_DLL),$(DESTDIR)$(libdir)/$(PACKAGE))
+	$(call cp,$(PLATFORM_DLL_CONFIG),$(DESTDIR)$(libdir)/$(PACKAGE))
 	$(call cp,$(PLATFORM_DLL_MDB),$(DESTDIR)$(libdir)/$(PACKAGE))
 	$(call cp,$(VOLUMEDB_DLL),$(DESTDIR)$(libdir)/$(PACKAGE))
 	$(call cp,$(PLATFORM_COMMON_DB_DLL),$(DESTDIR)$(libdir)/$(PACKAGE))
@@ -346,6 +354,7 @@
 	$(call rm,$(BASENJI),$(DESTDIR)$(bindir))
 	$(call rm,$(BASENJI_EXE_CONFIG),$(DESTDIR)$(libdir)/$(PACKAGE))
 	$(call rm,$(PLATFORM_DLL),$(DESTDIR)$(libdir)/$(PACKAGE))
+	$(call rm,$(PLATFORM_DLL_CONFIG),$(DESTDIR)$(libdir)/$(PACKAGE))
 	$(call rm,$(PLATFORM_DLL_MDB),$(DESTDIR)$(libdir)/$(PACKAGE))
 	$(call rm,$(VOLUMEDB_DLL),$(DESTDIR)$(libdir)/$(PACKAGE))
 	$(call rm,$(PLATFORM_COMMON_DB_DLL),$(DESTDIR)$(libdir)/$(PACKAGE))
diff -Naur basenji-0.9.0.orig/Basenji/src/Gui/About.cs basenji-0.9.0/Basenji/src/Gui/About.cs
--- basenji-0.9.0.orig/Basenji/src/Gui/About.cs	2012-02-19 11:29:25.000000000 +0100
+++ basenji-0.9.0/Basenji/src/Gui/About.cs	2012-06-22 20:38:28.945247520 +0200
@@ -36,6 +36,7 @@
 
 Contributors:
     Francesco Marella (https://launchpad.net/~francesco-marella)
+    György Balló (https://launchpad.net/~ballogy)
     Mauro Solcia (https://launchpad.net/~maurosolcia)
 " };
 		
diff -Naur basenji-0.9.0.orig/Platform/Makefile basenji-0.9.0/Platform/Makefile
--- basenji-0.9.0.orig/Platform/Makefile	2012-02-19 11:29:26.000000000 +0100
+++ basenji-0.9.0/Platform/Makefile	2012-06-22 20:38:28.951913804 +0200
@@ -19,6 +19,7 @@
 
 PLATFORM_DLL_MDB_SOURCE=bin/Debug/Platform.dll.mdb
 PLATFORM_DLL_MDB=$(BUILD_DIR)/Platform.dll.mdb
+PLATFORM_DLL_CONFIG_SOURCE=Platform.dll.config
 
 endif
 
@@ -32,12 +33,13 @@
 BUILD_DIR = bin/Release
 
 PLATFORM_DLL_MDB=
+PLATFORM_DLL_CONFIG_SOURCE=Platform.dll.config
 
 endif
 
 ifeq ($(CONFIG),GNOME_DEBUG)
 ASSEMBLY_COMPILER_COMMAND = dmcs
-ASSEMBLY_COMPILER_FLAGS =  -noconfig -codepage:utf8 -warn:3 -optimize- -debug -define:DEBUG -pkg:gnome-sharp-2.0 -pkg:gio-sharp-2.0  "-define:UNIX,DEBUG,GNOME"
+ASSEMBLY_COMPILER_FLAGS =  -noconfig -codepage:utf8 -warn:3 -optimize- -debug -define:DEBUG -pkg:gtk-sharp-2.0 -pkg:gio-sharp-2.0  "-define:UNIX,DEBUG,GNOME"
 ASSEMBLY = bin/Debug/Platform.dll
 ASSEMBLY_MDB = $(ASSEMBLY).mdb
 COMPILE_TARGET = library
@@ -46,12 +48,13 @@
 
 PLATFORM_DLL_MDB_SOURCE=bin/Debug/Platform.dll.mdb
 PLATFORM_DLL_MDB=$(BUILD_DIR)/Platform.dll.mdb
+PLATFORM_DLL_CONFIG_SOURCE=Platform.dll.config
 
 endif
 
 ifeq ($(CONFIG),GNOME_RELEASE)
 ASSEMBLY_COMPILER_COMMAND = dmcs
-ASSEMBLY_COMPILER_FLAGS =  -noconfig -codepage:utf8 -warn:3 -optimize+ -pkg:gnome-sharp-2.0 -pkg:gio-sharp-2.0  "-define:UNIX,GNOME"
+ASSEMBLY_COMPILER_FLAGS =  -noconfig -codepage:utf8 -warn:3 -optimize+ -pkg:gtk-sharp-2.0 -pkg:gio-sharp-2.0  "-define:UNIX,GNOME"
 ASSEMBLY = bin/Release/Platform.dll
 ASSEMBLY_MDB = 
 COMPILE_TARGET = library
@@ -59,6 +62,7 @@
 BUILD_DIR = bin/Release
 
 PLATFORM_DLL_MDB=
+PLATFORM_DLL_CONFIG_SOURCE=Platform.dll.config
 
 endif
 
@@ -66,7 +70,8 @@
 SATELLITE_ASSEMBLY_NAME=$(notdir $(basename $(ASSEMBLY))).resources.dll
 
 PROGRAMFILES = \
-	$(PLATFORM_DLL_MDB)  
+	$(PLATFORM_DLL_MDB) \
+	$(PLATFORM_DLL_CONFIG)  
 
 LINUX_PKGCONFIG = \
 	$(PLATFORM_PC)  
@@ -74,6 +79,7 @@
 
 RESGEN=resgen2
 
+PLATFORM_DLL_CONFIG = $(BUILD_DIR)/Platform.dll.config
 PLATFORM_PC = $(BUILD_DIR)/platform.pc
 
 FILES = \
@@ -103,13 +109,16 @@
 	src/Unix/IO/DkDriveInfoProvider.cs \
 	src/Win32/IO/Win32DriveInfoProvider.cs \
 	src/Win32/IO/AudioCdWin32.cs \
-	src/Gnome/IO/GioDriveInfoProvider.cs 
+	src/Gnome/IO/GioDriveInfoProvider.cs \
+	src/Gnome/GnomeDesktop/DesktopThumbnailFactory.cs \
+	src/Gnome/GnomeDesktop/DesktopThumbnailSize.cs 
 
 DATA_FILES = 
 
 RESOURCES = 
 
 EXTRAS = \
+	Platform.dll.config \
 	platform.pc.in 
 
 REFERENCES =  \
@@ -131,6 +140,7 @@
 
 
 
+$(eval $(call emit-deploy-target,PLATFORM_DLL_CONFIG))
 $(eval $(call emit-deploy-wrapper,PLATFORM_PC,platform.pc))
 
 
@@ -155,6 +165,7 @@
 	$(call cp,$(ASSEMBLY),$(DESTDIR)$(libdir)/$(PACKAGE))
 	$(call cp,$(ASSEMBLY_MDB),$(DESTDIR)$(libdir)/$(PACKAGE))
 	$(call cp,$(PLATFORM_DLL_MDB),$(DESTDIR)$(libdir)/$(PACKAGE))
+	$(call cp,$(PLATFORM_DLL_CONFIG),$(DESTDIR)$(libdir)/$(PACKAGE))
 	mkdir -p '$(DESTDIR)$(libdir)/pkgconfig'
 	$(call cp,$(PLATFORM_PC),$(DESTDIR)$(libdir)/pkgconfig)
 	make post-install-local-hook prefix=$(prefix)
@@ -165,6 +176,7 @@
 	$(call rm,$(ASSEMBLY),$(DESTDIR)$(libdir)/$(PACKAGE))
 	$(call rm,$(ASSEMBLY_MDB),$(DESTDIR)$(libdir)/$(PACKAGE))
 	$(call rm,$(PLATFORM_DLL_MDB),$(DESTDIR)$(libdir)/$(PACKAGE))
+	$(call rm,$(PLATFORM_DLL_CONFIG),$(DESTDIR)$(libdir)/$(PACKAGE))
 	$(call rm,$(PLATFORM_PC),$(DESTDIR)$(libdir)/pkgconfig)
 	make post-uninstall-local-hook prefix=$(prefix)
 
diff -Naur basenji-0.9.0.orig/Platform/Platform.dll.config basenji-0.9.0/Platform/Platform.dll.config
--- basenji-0.9.0.orig/Platform/Platform.dll.config	1970-01-01 01:00:00.000000000 +0100
+++ basenji-0.9.0/Platform/Platform.dll.config	2012-06-22 20:38:28.965246369 +0200
@@ -0,0 +1,3 @@
+<configuration>
+	<dllmap dll="gnome-desktop-2" target="libgnome-desktop-2.so.17"/>
+</configuration>
diff -Naur basenji-0.9.0.orig/Platform/Platform.mdp basenji-0.9.0/Platform/Platform.mdp
--- basenji-0.9.0.orig/Platform/Platform.mdp	2012-02-19 11:29:26.000000000 +0100
+++ basenji-0.9.0/Platform/Platform.mdp	2012-06-22 20:38:28.975245792 +0200
@@ -17,13 +17,13 @@
       <Output directory="bin/Debug" assembly="Platform" assemblyKeyFile="." />
       <Build debugmode="True" target="Library" />
       <Execution consolepause="True" runwithwarnings="True" runtime="MsNet" clr-version="Net_2_0" />
-      <CodeGeneration compiler="Mcs" warninglevel="3" optimize="False" unsafecodeallowed="False" generateoverflowchecks="True" definesymbols="UNIX,DEBUG,GNOME" generatexmldocumentation="False" additionalargs="-pkg:gnome-sharp-2.0 -pkg:gio-sharp-2.0" ctype="CSharpCompilerParameters" />
+      <CodeGeneration compiler="Mcs" warninglevel="3" optimize="False" unsafecodeallowed="False" generateoverflowchecks="True" definesymbols="UNIX,DEBUG,GNOME" generatexmldocumentation="False" additionalargs="-pkg:gtk-sharp-2.0 -pkg:gio-sharp-2.0" ctype="CSharpCompilerParameters" />
     </Configuration>
     <Configuration name="Gnome_Release" ctype="DotNetProjectConfiguration">
       <Output directory="bin/Release" assembly="Platform" assemblyKeyFile="." />
       <Build debugmode="False" target="Library" />
       <Execution consolepause="True" runwithwarnings="True" runtime="MsNet" clr-version="Net_2_0" />
-      <CodeGeneration compiler="Mcs" warninglevel="3" optimize="True" unsafecodeallowed="False" generateoverflowchecks="False" definesymbols="UNIX,GNOME" generatexmldocumentation="False" additionalargs="-pkg:gnome-sharp-2.0 -pkg:gio-sharp-2.0" ctype="CSharpCompilerParameters" />
+      <CodeGeneration compiler="Mcs" warninglevel="3" optimize="True" unsafecodeallowed="False" generateoverflowchecks="False" definesymbols="UNIX,GNOME" generatexmldocumentation="False" additionalargs="-pkg:gtk-sharp-2.0 -pkg:gio-sharp-2.0" ctype="CSharpCompilerParameters" />
     </Configuration>
   </Configurations>
   <Contents>
@@ -58,6 +58,9 @@
     <File subtype="Code" buildaction="Compile" name="src/Win32/IO/AudioCdWin32.cs" />
     <File subtype="Directory" buildaction="Compile" name="src/Gnome/IO" />
     <File subtype="Code" buildaction="Compile" name="src/Gnome/IO/GioDriveInfoProvider.cs" />
+    <File subtype="Code" buildaction="Compile" name="src/Gnome/GnomeDesktop/DesktopThumbnailFactory.cs" />
+    <File subtype="Code" buildaction="Compile" name="src/Gnome/GnomeDesktop/DesktopThumbnailSize.cs" />
+    <File subtype="Code" name="Platform.dll.config" buildaction="FileCopy" />
   </Contents>
   <References>
     <ProjectReference type="Gac" localcopy="True" refto="System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
diff -Naur basenji-0.9.0.orig/Platform/src/Common/Mime/MimeIconLookup.cs basenji-0.9.0/Platform/src/Common/Mime/MimeIconLookup.cs
--- basenji-0.9.0.orig/Platform/src/Common/Mime/MimeIconLookup.cs	2012-02-19 11:29:26.000000000 +0100
+++ basenji-0.9.0/Platform/src/Common/Mime/MimeIconLookup.cs	2012-06-22 20:38:28.978578934 +0200
@@ -1,6 +1,6 @@
 // MimeIconLookup.cs
 // 
-// Copyright (C) 2008 Patrick Ulbrich
+// Copyright (C) 2008, 2012 Patrick Ulbrich
 //
 // This program is free software: you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
@@ -68,17 +68,13 @@
 			if (mimeIcons.TryGetValue(mimeType, out iconName))
 				return iconName;
 #if GNOME
-			//iconName = GnomeNative.gnome_icon_lookup(GnomeNative.gtk_icon_theme_get_default(), IntPtr.Zero, null, null, IntPtr.Zero, mimeType, 0, IntPtr.Zero);
-			global::Gnome.IconLookupResultFlags result;
-			iconName = global::Gnome.Icon.Lookup(
-				Gtk.IconTheme.Default,
-				null,
-				null,
-				null,
-				null,
-				mimeType,
-				global::Gnome.IconLookupFlags.None,
-				out result);
+			GLib.ThemedIcon icon = (GLib.ThemedIcon) GLib.Content.TypeGetIcon(mimeType);
+			foreach (string name in icon.Names) {
+				if (Gtk.IconTheme.Default.HasIcon(name)) {
+					iconName = name;
+					break;
+				}
+			}
 #else
 			// TODO : find a portable implementation
 			iconName = null;
diff -Naur basenji-0.9.0.orig/Platform/src/Common/Mime/MimeType.cs basenji-0.9.0/Platform/src/Common/Mime/MimeType.cs
--- basenji-0.9.0.orig/Platform/src/Common/Mime/MimeType.cs	2012-02-19 11:29:26.000000000 +0100
+++ basenji-0.9.0/Platform/src/Common/Mime/MimeType.cs	2012-06-22 20:38:43.864388258 +0200
@@ -1,6 +1,6 @@
 // MimeType.cs
 // 
-// Copyright (C) 2008 Patrick Ulbrich
+// Copyright (C) 2008, 2012 Patrick Ulbrich
 //
 // This program is free software: you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
@@ -22,31 +22,32 @@
 {
 	public static class MimeType
 	{
-		internal const string MIME_TYPE_UNKNOWN = "application/octet-stream";
+		public const string MIME_TYPE_UNKNOWN = "application/octet-stream";
 		
-#if GNOME
-		static MimeType() {
-//			if (!Platform.Gnome.GnomeNative.gnome_vfs_initialized())
-//				Platform.Gnome.GnomeNative.gnome_vfs_init();
-			if (!global::Gnome.Vfs.Vfs.Initialized)
-				global::Gnome.Vfs.Vfs.Initialize();
-		}
-#endif
 		public static string GetMimeTypeForFile(string filename) {
-			string mimeType;
+			string mimeType = null;
 #if GNOME
-			// gnome vfs backend
-			// (returns null if the file does not exist)
-			string uri = global::Gnome.Vfs.Uri.GetUriFromLocalPath(filename);
-			mimeType = global::Gnome.Vfs.MimeType.GetMimeTypeForUri(uri);
-//			mimeType = Platform.Gnome.GnomeNative.gnome_vfs_get_mime_type(filename);
+			GLib.File file = GLib.FileFactory.NewForPath(filename);
+			if (file.Exists) {
+				// GLib backend
+				// (null if the file does not exist)
+				GLib.FileInfo info = file.QueryInfo ("standard::content-type", GLib.FileQueryInfoFlags.None, null);
+				mimeType = info.ContentType;
+			} else {
+				// use mono winforms backend as fallack for non-existing files
+				// (also takes filename extension into account, 
+				// always returns a mimetype, even if the file does not exist)
+				mimeType = Platform.Unix.Mime.Mime.GetMimeTypeForFile(filename);
+			}
+
 #elif UNIX
 			// mono winforms backend
-			// (always returns a mimetype, even if the file does not exist)
+			// (also takes filename extension into account, 
+			// always returns a mimetype, even if the file does not exist)
 			mimeType = Platform.Unix.Mime.Mime.GetMimeTypeForFile(filename);
 #elif WIN32
 			// win32 registry backend
-			// (always returns a mimetype)
+			// (uses filename extension only, always returns a mimetype)
 			mimeType = Platform.Win32.Mime.RegistryMime.GetMimeTypeForExtension(filename);
 #endif
 			if (mimeType == null)
diff -Naur basenji-0.9.0.orig/Platform/src/Gnome/GnomeDesktop/DesktopThumbnailFactory.cs basenji-0.9.0/Platform/src/Gnome/GnomeDesktop/DesktopThumbnailFactory.cs
--- basenji-0.9.0.orig/Platform/src/Gnome/GnomeDesktop/DesktopThumbnailFactory.cs	1970-01-01 01:00:00.000000000 +0100
+++ basenji-0.9.0/Platform/src/Gnome/GnomeDesktop/DesktopThumbnailFactory.cs	2012-06-22 20:38:28.985245217 +0200
@@ -0,0 +1,107 @@
+// This file was generated by the Gtk# code generator.
+// Any changes made will be lost if regenerated.
+
+#if GNOME
+namespace Gnome {
+
+	using System;
+	using System.Collections;
+	using System.Runtime.InteropServices;
+
+#region Autogenerated code
+	internal /*public*/ class DesktopThumbnailFactory : GLib.Object {
+
+		public DesktopThumbnailFactory(IntPtr raw) : base(raw) {}
+
+		[DllImport("gnome-desktop-2")]
+		static extern IntPtr gnome_desktop_thumbnail_factory_new(int size);
+
+		public DesktopThumbnailFactory (Gnome.DesktopThumbnailSize size) : base (IntPtr.Zero)
+		{
+			if (GetType () != typeof (DesktopThumbnailFactory)) {
+				throw new InvalidOperationException ("Can't override this constructor.");
+			}
+			Raw = gnome_desktop_thumbnail_factory_new((int) size);
+		}
+
+		[DllImport("gnome-desktop-2")]
+		static extern bool gnome_desktop_thumbnail_factory_has_valid_failed_thumbnail(IntPtr raw, IntPtr uri, IntPtr mtime);
+
+		public bool HasValidFailedThumbnail(string uri, System.DateTime mtime) {
+			IntPtr native_uri = GLib.Marshaller.StringToPtrGStrdup (uri);
+			bool raw_ret = gnome_desktop_thumbnail_factory_has_valid_failed_thumbnail(Handle, native_uri, GLib.Marshaller.DateTimeTotime_t (mtime));
+			bool ret = raw_ret;
+			GLib.Marshaller.Free (native_uri);
+			return ret;
+		}
+
+		[DllImport("gnome-desktop-2")]
+		static extern void gnome_desktop_thumbnail_factory_save_thumbnail(IntPtr raw, IntPtr thumbnail, IntPtr uri, IntPtr original_mtime);
+
+		public void SaveThumbnail(Gdk.Pixbuf thumbnail, string uri, System.DateTime original_mtime) {
+			IntPtr native_uri = GLib.Marshaller.StringToPtrGStrdup (uri);
+			gnome_desktop_thumbnail_factory_save_thumbnail(Handle, thumbnail == null ? IntPtr.Zero : thumbnail.Handle, native_uri, GLib.Marshaller.DateTimeTotime_t (original_mtime));
+			GLib.Marshaller.Free (native_uri);
+		}
+
+		[DllImport("gnome-desktop-2")]
+		static extern IntPtr gnome_desktop_thumbnail_factory_generate_thumbnail(IntPtr raw, IntPtr uri, IntPtr mime_type);
+
+		public Gdk.Pixbuf GenerateThumbnail(string uri, string mime_type) {
+			IntPtr native_uri = GLib.Marshaller.StringToPtrGStrdup (uri);
+			IntPtr native_mime_type = GLib.Marshaller.StringToPtrGStrdup (mime_type);
+			IntPtr raw_ret = gnome_desktop_thumbnail_factory_generate_thumbnail(Handle, native_uri, native_mime_type);
+			Gdk.Pixbuf ret = GLib.Object.GetObject(raw_ret) as Gdk.Pixbuf;
+			GLib.Marshaller.Free (native_uri);
+			GLib.Marshaller.Free (native_mime_type);
+			return ret;
+		}
+
+		[DllImport("gnome-desktop-2")]
+		static extern IntPtr gnome_desktop_thumbnail_factory_get_type();
+
+		public static new GLib.GType GType { 
+			get {
+				IntPtr raw_ret = gnome_desktop_thumbnail_factory_get_type();
+				GLib.GType ret = new GLib.GType(raw_ret);
+				return ret;
+			}
+		}
+
+		[DllImport("gnome-desktop-2")]
+		static extern bool gnome_desktop_thumbnail_factory_can_thumbnail(IntPtr raw, IntPtr uri, IntPtr mime_type, IntPtr mtime);
+
+		public bool CanThumbnail(string uri, string mime_type, System.DateTime mtime) {
+			IntPtr native_uri = GLib.Marshaller.StringToPtrGStrdup (uri);
+			IntPtr native_mime_type = GLib.Marshaller.StringToPtrGStrdup (mime_type);
+			bool raw_ret = gnome_desktop_thumbnail_factory_can_thumbnail(Handle, native_uri, native_mime_type, GLib.Marshaller.DateTimeTotime_t (mtime));
+			bool ret = raw_ret;
+			GLib.Marshaller.Free (native_uri);
+			GLib.Marshaller.Free (native_mime_type);
+			return ret;
+		}
+
+		[DllImport("gnome-desktop-2")]
+		static extern void gnome_desktop_thumbnail_factory_create_failed_thumbnail(IntPtr raw, IntPtr uri, IntPtr mtime);
+
+		public void CreateFailedThumbnail(string uri, System.DateTime mtime) {
+			IntPtr native_uri = GLib.Marshaller.StringToPtrGStrdup (uri);
+			gnome_desktop_thumbnail_factory_create_failed_thumbnail(Handle, native_uri, GLib.Marshaller.DateTimeTotime_t (mtime));
+			GLib.Marshaller.Free (native_uri);
+		}
+
+		[DllImport("gnome-desktop-2")]
+		static extern IntPtr gnome_desktop_thumbnail_factory_lookup(IntPtr raw, IntPtr uri, IntPtr mtime);
+
+		public string Lookup(string uri, System.DateTime mtime) {
+			IntPtr native_uri = GLib.Marshaller.StringToPtrGStrdup (uri);
+			IntPtr raw_ret = gnome_desktop_thumbnail_factory_lookup(Handle, native_uri, GLib.Marshaller.DateTimeTotime_t (mtime));
+			string ret = GLib.Marshaller.PtrToStringGFree(raw_ret);
+			GLib.Marshaller.Free (native_uri);
+			return ret;
+		}
+
+#endregion
+	}
+}
+#endif
diff -Naur basenji-0.9.0.orig/Platform/src/Gnome/GnomeDesktop/DesktopThumbnailSize.cs basenji-0.9.0/Platform/src/Gnome/GnomeDesktop/DesktopThumbnailSize.cs
--- basenji-0.9.0.orig/Platform/src/Gnome/GnomeDesktop/DesktopThumbnailSize.cs	1970-01-01 01:00:00.000000000 +0100
+++ basenji-0.9.0/Platform/src/Gnome/GnomeDesktop/DesktopThumbnailSize.cs	2012-06-22 20:38:28.988578358 +0200
@@ -0,0 +1,18 @@
+// This file was generated by the Gtk# code generator.
+// Any changes made will be lost if regenerated.
+
+#if GNOME
+namespace Gnome {
+
+	using System;
+	using System.Runtime.InteropServices;
+
+#region Autogenerated code
+	internal /*public*/ enum DesktopThumbnailSize {
+
+		Normal,
+		Large,
+	}
+#endregion
+}
+#endif
diff -Naur basenji-0.9.0.orig/Platform/src/Gnome/ThumbnailGenerator.cs basenji-0.9.0/Platform/src/Gnome/ThumbnailGenerator.cs
--- basenji-0.9.0.orig/Platform/src/Gnome/ThumbnailGenerator.cs	2012-02-19 11:29:26.000000000 +0100
+++ basenji-0.9.0/Platform/src/Gnome/ThumbnailGenerator.cs	2012-06-22 20:38:28.991911499 +0200
@@ -1,6 +1,6 @@
 // ThumbnailGenerator.cs
 // 
-// Copyright (C) 2008 Patrick Ulbrich
+// Copyright (C) 2008, 2012 Patrick Ulbrich
 //
 // This program is free software: you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
@@ -26,15 +26,15 @@
 {
 	internal class ThumbnailGenerator : Platform.Common.IThumbnailGenerator
 	{	
-		private const ThumbnailSize THUMB_SIZE = ThumbnailSize.Normal; // 100 pix
+		private const DesktopThumbnailSize THUMB_SIZE = DesktopThumbnailSize.Normal; // 100 pix
 		
-		private ThumbnailFactory tf;
+		private DesktopThumbnailFactory tf;
 		private Pixbuf thumbnail;
 		private bool disposed;
 		
 		public ThumbnailGenerator() {
 			disposed = false;
-			tf = new ThumbnailFactory(THUMB_SIZE);
+			tf = new DesktopThumbnailFactory(THUMB_SIZE);
 		}
 		
 		public bool GenerateThumbnail(FileInfo fi, string mimeType) {
@@ -43,7 +43,7 @@
 				thumbnail = null;
 			}
 			
-			string uri = global::Gnome.Vfs.Uri.GetUriFromLocalPath(fi.FullName);
+			string uri = new Uri(fi.FullName).ToString();
 			if (tf.CanThumbnail(uri, mimeType, fi.LastWriteTime)) {
 				thumbnail = tf.GenerateThumbnail(uri, mimeType);
 				if (thumbnail != null)
diff -Naur basenji-0.9.0.orig/README basenji-0.9.0/README
--- basenji-0.9.0.orig/README	2012-02-19 11:29:26.000000000 +0100
+++ basenji-0.9.0/README	2012-06-22 20:38:28.995244641 +0200
@@ -10,8 +10,7 @@
 	mono (2.4 or later)
 	glib-sharp (2.12.9 or later)
 	gtk-sharp (2.12.9 or later)
-	gnome-sharp (2.24.1 or later)
-	gnome-vfs-sharp (2.24.1 or later)
+	libgnome-desktop (2.32.0 or later)
 	gio-sharp (2.22.2 or later)
 	dbus-sharp (0.7.0 or later)
 	dbus-sharp-glib (0.7.0 or later)
diff -Naur basenji-0.9.0.orig/VolumeDB/Makefile basenji-0.9.0/VolumeDB/Makefile
--- basenji-0.9.0.orig/VolumeDB/Makefile	2012-02-19 11:29:26.000000000 +0100
+++ basenji-0.9.0/VolumeDB/Makefile	2012-06-22 20:38:29.005244066 +0200
@@ -26,6 +26,7 @@
 PLATFORM_COMMON_DB_DLL_MDB_SOURCE=../Platform.Common.DB/bin/Debug/Platform.Common.DB.dll.mdb
 PLATFORM_COMMON_DB_DLL_MDB=$(BUILD_DIR)/Platform.Common.DB.dll.mdb
 PLATFORM_DLL_SOURCE=../Platform/bin/Debug/Platform.dll
+PLATFORM_DLL_CONFIG_SOURCE=../Platform/Platform.dll.config
 PLATFORM_DLL_MDB_SOURCE=../Platform/bin/Debug/Platform.dll.mdb
 PLATFORM_DLL_MDB=$(BUILD_DIR)/Platform.dll.mdb
 MUSICBRAINZ_DLL_SOURCE=../MusicBrainz/bin/Debug/MusicBrainz.dll
@@ -50,6 +51,7 @@
 PLATFORM_COMMON_DB_DLL_SOURCE=../Platform.Common.DB/bin/Release/Platform.Common.DB.dll
 PLATFORM_COMMON_DB_DLL_MDB=
 PLATFORM_DLL_SOURCE=../Platform/bin/Release/Platform.dll
+PLATFORM_DLL_CONFIG_SOURCE=../Platform/Platform.dll.config
 PLATFORM_DLL_MDB=
 MUSICBRAINZ_DLL_SOURCE=../MusicBrainz/bin/Release/MusicBrainz.dll
 MUSICBRAINZ_DLL_MDB=
@@ -74,6 +76,7 @@
 PLATFORM_COMMON_DB_DLL_MDB_SOURCE=../Platform.Common.DB/bin/Debug/Platform.Common.DB.dll.mdb
 PLATFORM_COMMON_DB_DLL_MDB=$(BUILD_DIR)/Platform.Common.DB.dll.mdb
 PLATFORM_DLL_SOURCE=../Platform/bin/Debug/Platform.dll
+PLATFORM_DLL_CONFIG_SOURCE=../Platform/Platform.dll.config
 PLATFORM_DLL_MDB_SOURCE=../Platform/bin/Debug/Platform.dll.mdb
 PLATFORM_DLL_MDB=$(BUILD_DIR)/Platform.dll.mdb
 MUSICBRAINZ_DLL_SOURCE=../MusicBrainz/bin/Debug/MusicBrainz.dll
@@ -98,6 +101,7 @@
 PLATFORM_COMMON_DB_DLL_SOURCE=../Platform.Common.DB/bin/Release/Platform.Common.DB.dll
 PLATFORM_COMMON_DB_DLL_MDB=
 PLATFORM_DLL_SOURCE=../Platform/bin/Release/Platform.dll
+PLATFORM_DLL_CONFIG_SOURCE=../Platform/Platform.dll.config
 PLATFORM_DLL_MDB=
 MUSICBRAINZ_DLL_SOURCE=../MusicBrainz/bin/Release/MusicBrainz.dll
 MUSICBRAINZ_DLL_MDB=
@@ -112,6 +116,7 @@
 	$(PLATFORM_COMMON_DB_DLL) \
 	$(PLATFORM_COMMON_DB_DLL_MDB) \
 	$(PLATFORM_DLL) \
+	$(PLATFORM_DLL_CONFIG) \
 	$(PLATFORM_DLL_MDB) \
 	$(MUSICBRAINZ_DLL) \
 	$(MUSICBRAINZ_DLL_MDB)  
@@ -124,6 +129,7 @@
 
 PLATFORM_COMMON_DB_DLL = $(BUILD_DIR)/Platform.Common.DB.dll
 PLATFORM_DLL = $(BUILD_DIR)/Platform.dll
+PLATFORM_DLL_CONFIG = $(BUILD_DIR)/Platform.dll.config
 MUSICBRAINZ_DLL = $(BUILD_DIR)/MusicBrainz.dll
 VOLUMEDB_PC = $(BUILD_DIR)/volumedb.pc
 
@@ -265,6 +271,7 @@
 $(eval $(call emit-deploy-target,PLATFORM_COMMON_DB_DLL))
 $(eval $(call emit-deploy-target,PLATFORM_COMMON_DB_DLL_MDB))
 $(eval $(call emit-deploy-target,PLATFORM_DLL))
+$(eval $(call emit-deploy-target,PLATFORM_DLL_CONFIG))
 $(eval $(call emit-deploy-target,PLATFORM_DLL_MDB))
 $(eval $(call emit-deploy-target,MUSICBRAINZ_DLL))
 $(eval $(call emit-deploy-target,MUSICBRAINZ_DLL_MDB))
@@ -295,6 +302,7 @@
 	$(call cp,$(PLATFORM_COMMON_DB_DLL),$(DESTDIR)$(libdir)/$(PACKAGE))
 	$(call cp,$(PLATFORM_COMMON_DB_DLL_MDB),$(DESTDIR)$(libdir)/$(PACKAGE))
 	$(call cp,$(PLATFORM_DLL),$(DESTDIR)$(libdir)/$(PACKAGE))
+	$(call cp,$(PLATFORM_DLL_CONFIG),$(DESTDIR)$(libdir)/$(PACKAGE))
 	$(call cp,$(PLATFORM_DLL_MDB),$(DESTDIR)$(libdir)/$(PACKAGE))
 	$(call cp,$(MUSICBRAINZ_DLL),$(DESTDIR)$(libdir)/$(PACKAGE))
 	$(call cp,$(MUSICBRAINZ_DLL_MDB),$(DESTDIR)$(libdir)/$(PACKAGE))
@@ -311,6 +319,7 @@
 	$(call rm,$(PLATFORM_COMMON_DB_DLL),$(DESTDIR)$(libdir)/$(PACKAGE))
 	$(call rm,$(PLATFORM_COMMON_DB_DLL_MDB),$(DESTDIR)$(libdir)/$(PACKAGE))
 	$(call rm,$(PLATFORM_DLL),$(DESTDIR)$(libdir)/$(PACKAGE))
+	$(call rm,$(PLATFORM_DLL_CONFIG),$(DESTDIR)$(libdir)/$(PACKAGE))
 	$(call rm,$(PLATFORM_DLL_MDB),$(DESTDIR)$(libdir)/$(PACKAGE))
 	$(call rm,$(MUSICBRAINZ_DLL),$(DESTDIR)$(libdir)/$(PACKAGE))
 	$(call rm,$(MUSICBRAINZ_DLL_MDB),$(DESTDIR)$(libdir)/$(PACKAGE))
